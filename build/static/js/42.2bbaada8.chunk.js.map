{"version":3,"file":"static/js/42.2bbaada8.chunk.js","mappings":"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","sources":["components/TomTomMap/index.js","components/Accordion/index.js","components/RouteList/RouteCard.js","modules/routes/actionCreators/removeRoute.js","containers/RouteListPage.js","modules/app/actionCreators/enqueueNotification.js","hooks/useNotification.js","modules/routes/actionCreators/addRoute.js"],"sourcesContent":["import { useRef } from \"react\";\nimport { useEffect } from \"react\";\nimport tt from \"@tomtom-international/web-sdk-maps\";\nimport mapServices from \"@tomtom-international/web-sdk-services\";\nimport \"@tomtom-international/web-sdk-maps/dist/maps.css\";\n\nconst popupOffsets = {\n  top: [0, 0],\n  bottom: [0, -50],\n  left: [25, -35],\n  right: [-25, -35],\n};\nconst TOM_TOM_KEY = \"lShoCSsBrDekAITrQwqPHTfXZI47gzFH\";\n\nconst Map = ({ stops }) => {\n  const mapElement = useRef();\n\n  const mapZoom = 3;\n\n  useEffect(() => {\n    let map = tt.map({\n      key: TOM_TOM_KEY,\n      container: mapElement.current,\n      center: [stops[0].longitude, stops[0].latitude],\n      zoom: mapZoom,\n      stylesVisibility: {\n        trafficIncidents: true,\n        trafficFlow: true,\n      },\n    });\n\n    const locations = [];\n\n    stops.forEach((stop) =>\n      locations.push(stop.longitude + \",\" + stop.latitude)\n    );\n\n    mapServices.services\n      .calculateRoute({\n        key: TOM_TOM_KEY,\n        locations: locations.join(\":\"),\n      })\n      .then(function (response) {\n        var geojson = response.toGeoJson();\n        map.addLayer({\n          id: \"route\",\n          type: \"line\",\n          source: {\n            type: \"geojson\",\n            data: geojson,\n          },\n          paint: {\n            \"line-color\": \"#00d7ff\",\n            \"line-width\": 2,\n          },\n        });\n        var bounds = new tt.LngLatBounds();\n        geojson.features[0].geometry.coordinates.forEach((point) =>\n          bounds.extend(tt.LngLat.convert(point))\n        );\n        map.fitBounds(bounds, { padding: 20 });\n      });\n\n    stops.forEach((stop) => {\n      let marker = new tt.Marker({\n        draggable: false,\n      })\n        .setLngLat([stop.longitude, stop.latitude])\n        .addTo(map);\n      let popup = new tt.Popup({ offset: popupOffsets }).setHTML(stop.name);\n      marker.setPopup(popup);\n    });\n\n    return () => map.remove();\n  }, [stops]);\n\n  //   useEffect(() => {\n  //     if (!longitude || !latitude) {\n  //       setDefaultCoordinates();\n  //     }\n  //   }, [latitude, longitude]);\n\n  //   const setDefaultCoordinates = () => {\n  //     const defLatitude = 0;\n  //     const defLongitude = 0;\n  //     if (location) {\n  //       defLatitude = location.getCurrentPosition(\n  //         (position) => position.coords.latitude\n  //       );\n  //       defLongitude = location.getCurrentPosition(\n  //         (position) => position.coords.longitude\n  //       );\n  //     }\n  //     setMapLatitude(defLatitude);\n  //     setMapLongitude(defLongitude);\n  //   };\n\n  //   const increaseZoom = () => {\n  //     if (mapZoom < MAX_ZOOM) {\n  //       setMapZoom(mapZoom + 1);\n  //     }\n  //   };\n\n  //   const decreaseZoom = () => {\n  //     if (mapZoom > 1) {\n  //       setMapZoom(mapZoom - 1);\n  //     }\n  //   };\n\n  //   const updateMap = () => {\n  //     map.setCenter([parseFloat(mapLongitude), parseFloat(mapLatitude)]);\n  //     map.setZoom(mapZoom);\n  //   };\n\n  return <div ref={mapElement} className=\"mapDiv\" />;\n};\n\nexport default Map;\n","import MuiAccordion from \"@mui/material/Accordion\";\nimport MuiAccordionSummary from \"@mui/material/AccordionSummary\";\nimport MuiAccordionDetails from \"@mui/material/AccordionDetails\";\nimport IconArrowForwardIosSharp from \"@mui/icons-material/ArrowForwardIosSharp\";\nimport { styled } from \"@mui/material/styles\";\n\nconst Accordion = styled((props) => <MuiAccordion disableGutters elevation={0} {...props} />)(\n  ({ theme }) => ({\n    border: `1px solid ${theme.palette.divider}`,\n    \"&:not(:last-child)\": {},\n    \"&:before\": {\n      display: \"none\"\n    }\n  })\n);\n\nAccordion.Summary = styled((props) => (\n  <MuiAccordionSummary\n    expandIcon={<IconArrowForwardIosSharp sx={{ fontSize: \"0.9rem\" }} />}\n    {...props}\n  />\n))(({ theme }) => ({\n  backgroundColor: \"#F4F6FB\",\n  border: \"none\",\n  borderRadius: theme.spacing(0.25),\n  boxShadow: \"0 0 0 1px #F4F6FB\",\n  flexDirection: \"row-reverse\",\n  \"& .MuiAccordionSummary-expandIconWrapper.Mui-expanded\": {\n    transform: \"rotate(90deg)\"\n  },\n  \"& .MuiAccordionSummary-content\": {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nAccordion.Details = styled(MuiAccordionDetails)(({ theme }) => ({\n  padding: theme.spacing(2)\n  // borderTop: \"1px solid rgba(0, 0, 0, .125)\"\n}));\n\nexport default Accordion;\n","import {\n  Button,\n  Typography,\n  Card,\n  CardActions,\n  CardContent,\n  Chip,\n  Box,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n} from \"@mui/material\";\nimport EastIcon from \"@mui/icons-material/East\";\nimport WestIcon from \"@mui/icons-material/West\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport AirlineStopsIcon from \"@mui/icons-material/AirlineStops\";\n\nimport get from \"lodash/get\";\nimport Accordion from \"../Accordion\";\n\nconst RouteCard = ({ details, onDeleteClick, onEditClick, onViewMapClick }) => {\n  return (\n    <Card\n      sx={{\n        maxWidth: \"500px\",\n        my: 2,\n        backgroundColor: \"#f7fafd\",\n        borderRadius: 2,\n      }}\n      elevation={0}\n      key={details.id}\n    >\n      <CardContent>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          {get(details, \"name\")}\n        </Typography>\n        <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n          <Typography variant=\"h5\">\n            {get(details, \"stops[0].name\")}\n            {get(details, \"direction\") === \"up\" ? (\n              <EastIcon\n                sx={{ verticalAlign: \"sub\", color: \"ThreeDHighlight\" }}\n              />\n            ) : (\n              <WestIcon\n                sx={{ verticalAlign: \"sub\", color: \"ThreeDHighlight\" }}\n              />\n            )}{\" \"}\n            {get(details, `stops[${details.stops.length - 1}].name`)}\n          </Typography>\n          <Chip\n            size=\"small\"\n            label={get(details, \"is_active\") ? \"Active\" : \"Inactive\"}\n            variant=\"outlined\"\n            color={get(details, \"is_active\") ? \"success\" : \"error\"}\n            sx={{ mx: 1 }}\n          />\n        </Box>\n\n        <Accordion\n          disableGutters\n          elevation={0}\n          sx={{ background: \"transparent\", px: 0, my: 1 }}\n        >\n          <Accordion.Summary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"stop-details\"\n            id=\"stop-header\"\n          >\n            All Stops\n          </Accordion.Summary>\n          <Accordion.Details>\n            <List dense={true}>\n              {details.stops.map((item, index) => (\n                <ListItem key={`stop${index}`}>\n                  <ListItemIcon>\n                    <AirlineStopsIcon />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={item.name}\n                    secondary={`(${item.latitude} , ${item.longitude})`}\n                  />\n                </ListItem>\n              ))}\n            </List>\n          </Accordion.Details>\n        </Accordion>\n      </CardContent>\n      <CardActions sx={{ paddingX: 2 }}>\n        <Grid container>\n          <Grid item xs={8}>\n            <Button\n              onClick={() => onEditClick(details.id)}\n              size=\"small\"\n              color=\"info\"\n            >\n              Edit\n            </Button>\n\n            <Button\n              onClick={() => onDeleteClick(details.id)}\n              size=\"small\"\n              color=\"error\"\n            >\n              Delete\n            </Button>\n          </Grid>\n          <Grid item xs={4} sx={{ textAlign: \"end\" }}>\n            {typeof onViewMapClick === \"function\" && (\n              <Button\n                onClick={() => onViewMapClick(details.id)}\n                variant=\"contained\"\n                size=\"small\"\n                color=\"secondary\"\n              >\n                View on Map\n              </Button>\n            )}\n          </Grid>\n        </Grid>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default RouteCard;\n","import { DELETE_ROUTE } from \"../actions\";\n\nconst removeRoute = (routeId) => {\n  return async (dispatch) => {\n    dispatch({\n      type: DELETE_ROUTE,\n      payload: {\n        id: routeId,\n      },\n    });\n  };\n};\n\nexport default removeRoute;\n","import {\n  Toolbar,\n  Button,\n  Grid,\n  Alert,\n  AlertTitle,\n  Stack,\n  Card,\n  CardContent,\n  CardHeader,\n  IconButton,\n} from \"@mui/material\";\nimport RouteCard from \"../components/RouteList/RouteCard\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport removeRoute from \"../modules/routes/actionCreators/removeRoute\";\nimport Map from \"../components/TomTomMap\";\nimport { useState } from \"react\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport useNotification from \"../hooks/useNotification\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport addRoute from \"../modules/routes/actionCreators/addRoute\";\n\nconst RouteListPage = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const notify = useNotification();\n\n  const routes = useSelector((state) => state.routes.routes || null);\n  const [selectedRoute, setSelectedRoute] = useState(null);\n\n  const handleDeleteClick = (id) => {\n    dispatch(removeRoute(id));\n  };\n\n  const handleClearAll = () => {\n    routes.forEach((item) => {\n      dispatch(removeRoute(item.id));\n    });\n  };\n\n  const handleEditClick = (id) => {\n    navigate(`/route/${id}`);\n  };\n\n  const handleViewOnMapClick = (routeId) => {\n    setSelectedRoute(routes.find((route) => route.id === routeId));\n  };\n\n  const handleAddSampleRoute = () => {\n    const postData = {\n      direction: \"up\",\n      id: uuidv4(),\n      is_active: true,\n      name: \"Sample Route\",\n      stops: [\n        {\n          id: uuidv4(),\n          latitude: \"12.972442\",\n          longitude: \"77.580643\",\n          name: \"Bangalore\",\n        },\n        {\n          id: uuidv4(),\n          latitude: \"15.299326\",\n          longitude: \"74.123993\",\n          name: \"Goa\",\n        },\n        {\n          id: uuidv4(),\n          latitude: \"19.075983\",\n          longitude: \"72.877655\",\n          name: \"Mumbai\",\n        },\n      ],\n    };\n\n    dispatch(addRoute(postData)).then(() => {\n      notify.success(\"Sample Route added successfully\");\n    });\n  };\n\n  return (\n    <>\n      {!!routes && routes.length > 0 && (\n        <Toolbar sx={{ justifyContent: \"end\" }}>\n          <Stack direction=\"row\" spacing={2}>\n            <Button\n              onClick={() => {\n                navigate(\"/route/new\");\n              }}\n              variant=\"contained\"\n            >\n              Add Route\n            </Button>\n            <Button\n              color=\"secondary\"\n              onClick={() => handleClearAll()}\n              variant=\"contained\"\n            >\n              Clear Routes\n            </Button>\n          </Stack>\n        </Toolbar>\n      )}\n      <Grid container spacing={2}>\n        <Grid item xs={6} sx={{ my: 2 }}>\n          {!!routes && routes.length > 0 ? (\n            routes.map((item) => (\n              <RouteCard\n                details={item}\n                onDeleteClick={handleDeleteClick}\n                onEditClick={handleEditClick}\n                onViewMapClick={\n                  !selectedRoute ? handleViewOnMapClick : undefined\n                }\n              />\n            ))\n          ) : (\n            <>\n              <Alert severity=\"info\">\n                <AlertTitle>No Route Available!</AlertTitle>\n                Add a route by clicking on— <strong>\n                  Add route\n                </strong> button! <br />\n                You can also add a quick sample route by clicking on{\" \"}\n                <strong>Add Sample Route</strong> button.\n              </Alert>\n\n              <Stack direction=\"row\" spacing={1} sx={{ my: 2, mx: \"auto\" }}>\n                <Button\n                  onClick={() => {\n                    navigate(\"/route/new\");\n                  }}\n                  variant=\"contained\"\n                >\n                  Add Route\n                </Button>\n                <Button\n                  onClick={() => handleAddSampleRoute()}\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                >\n                  Add Sample Route\n                </Button>\n              </Stack>\n            </>\n          )}\n        </Grid>\n        {!!selectedRoute && routes.length > 0 && (\n          <Grid item xs={6} sx={{ my: 3 }}>\n            <Card>\n              <CardHeader\n                title={selectedRoute.name}\n                action={\n                  <IconButton\n                    onClick={() => setSelectedRoute(null)}\n                    aria-label=\"close\"\n                  >\n                    <CloseIcon />\n                  </IconButton>\n                }\n              />\n              <CardContent sx={{ height: \"50vh\" }}>\n                <Map\n                  stops={\n                    selectedRoute.direction !== \"up\"\n                      ? selectedRoute.stops.reverse()\n                      : selectedRoute.stops\n                  }\n                />\n              </CardContent>\n            </Card>\n          </Grid>\n        )}\n      </Grid>\n    </>\n  );\n};\n\nexport default RouteListPage;\n","import { v4 as uuidv4 } from \"uuid\";\nimport { ENQUEUE_NOTIFICATION } from \"../actions\";\n\nconst enqueueNotification = (content, notificationType) => {\n  return async (dispatch) => {\n    dispatch({\n      type: ENQUEUE_NOTIFICATION,\n      payload: {\n        content: content,\n        notificationType: notificationType,\n        id: uuidv4()\n      }\n    });\n  };\n};\n\nexport default enqueueNotification;\n","import get from \"lodash/get\";\nimport { useDispatch } from \"react-redux\";\n\nimport enqueueNotification from \"../modules/app/actionCreators/enqueueNotification\";\n\nconst useNotification = () => {\n  const dispatch = useDispatch();\n  return {\n    error: (content) => {\n      return dispatch(enqueueNotification(content, \"error\"));\n    },\n    success: (content) => {\n      return dispatch(enqueueNotification(content, \"success\"));\n    },\n    info: (content) => {\n      return dispatch(enqueueNotification(content, \"info\"));\n    },\n    warning: (content) => {\n      return dispatch(enqueueNotification(content, \"warning\"));\n    },\n\n    apiError: (defaultMessage, callback, path = \"response.data.message\") => (\n      error\n    ) => {\n      dispatch(enqueueNotification(get(error, path, defaultMessage), \"error\"));\n      if (typeof callback === \"function\") {\n        callback(error);\n      }\n    }\n  };\n};\n\nexport default useNotification;\n","import { ADD_ROUTE } from \"../actions\";\n\nconst addRoute = (postData) => {\n  return async (dispatch) => {\n    dispatch({\n      type: ADD_ROUTE,\n      payload: postData,\n    });\n  };\n};\n\nexport default addRoute;\n"],"names":["popupOffsets","top","bottom","left","right","TOM_TOM_KEY","stops","mapElement","useRef","useEffect","map","tt","key","container","current","center","longitude","latitude","zoom","stylesVisibility","trafficIncidents","trafficFlow","locations","forEach","stop","push","mapServices","join","then","response","geojson","toGeoJson","addLayer","id","type","source","data","paint","bounds","features","geometry","coordinates","point","extend","fitBounds","padding","marker","draggable","setLngLat","addTo","popup","offset","setHTML","name","setPopup","remove","ref","className","Accordion","styled","props","disableGutters","elevation","theme","border","palette","divider","display","Summary","expandIcon","sx","fontSize","backgroundColor","borderRadius","spacing","boxShadow","flexDirection","transform","marginLeft","Details","MuiAccordionDetails","details","onDeleteClick","onEditClick","onViewMapClick","Card","maxWidth","my","CardContent","Typography","color","gutterBottom","get","Box","alignItems","variant","East","verticalAlign","West","length","Chip","size","label","mx","background","px","ExpandMore","List","dense","item","index","ListItem","ListItemIcon","AirlineStops","ListItemText","primary","secondary","CardActions","paddingX","Grid","xs","Button","onClick","textAlign","routeId","dispatch","DELETE_ROUTE","payload","navigate","useNavigate","useDispatch","notify","useNotification","routes","useSelector","state","useState","selectedRoute","setSelectedRoute","handleDeleteClick","removeRoute","handleEditClick","handleViewOnMapClick","find","route","Toolbar","justifyContent","Stack","direction","undefined","Alert","severity","AlertTitle","postData","uuidv4","is_active","addRoute","success","handleAddSampleRoute","CardHeader","title","action","IconButton","Close","height","reverse","content","notificationType","ENQUEUE_NOTIFICATION","error","enqueueNotification","info","warning","apiError","defaultMessage","callback","path","ADD_ROUTE"],"sourceRoot":""}